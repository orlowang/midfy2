schema {
  query: Query
  mutation: Mutation
}

type Goods {
  Id: String
  Name: String
  subTitle: String
  Photos: [String]
  mainPhoto: String
  minPrice: String
  maxPrice: String
  inStock: Int
  Tags: [SimpleKV]
  SKU: [Sku]
  Products: [Product]
  Detail: String
  imgDetail: [SimpleKV]
  Shiping: Int
}

type GoodsList {
  Id: String
  Name: String
  subTitle: String
  mainPhoto: String
  Price: String
  Tags: [SimpleKV]
}

input GoodsMutation {
  goods_id: String
  product_id: String
  num: Int
  price: Int
}

type Mutation {
  order(input: UpdateOrderInput!): UpdateOrderPayload
}

interface Node {
  id: ID!
}

input Order {
  goods: [GoodsMutation]
  goods_num: String
  shiping: Int
  order_price: Int
  consignee: String
  mobile: String
  address: String
  pay_type: String
}

type Product {
  productId: String
  Price: Int
  Stock: Int
  Property: [Int]
}

type Query {
  node(id: ID!): Node
  viewer: Viewer
}

type SimpleKV {
  Key: String
  Value: String
}

type SimpleUserInfo {
  name: String
  sex: String
  nickname: String
  mobile: String
  province: String
  city: String
  district: String
  road: String
  project_name: String
  building_name: String
  address: String
}

type Sku {
  Name: String
  Key: [SimpleKV]
}

input UpdateOrderInput {
  detail: Order
  clientMutationId: String!
}

type UpdateOrderPayload {
  orderId: String
  price: Int
  clientMutationId: String!
}

type Viewer {
  Goods(id: String!): Goods
  goodsList: [GoodsList]
  userInfo: SimpleUserInfo
}
